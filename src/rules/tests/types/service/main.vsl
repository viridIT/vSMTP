#{
    connect: [
        rule "unknown_service" || {
            try {
                server.run_service("unknown");
                return vsl::deny();
            } catch (err) {
                print(err);
                if "" in err { return vsl::next(); } else { return vsl::deny(); }
            }
        },

        rule "test_services" || {
            let result = services.run_service("shell");

            print(`string: ${result.to_string()}`);
            print(`debug: ${result.to_debug()}`);

            if result.has_code
            && result.code == 0
            && !result.has_signal
            {
                try {
                    result.signal;
                    return vsl::deny();
                } catch {
                    return vsl::next();
                }
            } else {
                vsl::deny()
            }
        },

        rule "trailing" || vsl::accept(),
    ]
}