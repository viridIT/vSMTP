/*
 * vSMTP mail transfer agent
 * Copyright (C) 2022 viridIT SAS
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see https://www.gnu.org/licenses/.
 *
*/

fn mutate_headers() {

    object header_name string = "X-New-Header";
    object header_value string = "value of header";
    object another_header_value string = "value of header";
    object from_header string = "From";
    object green address = "green@foo.net";

    append_header(header_name, header_value);
    append_header("X-Another-Header", another_header_value);
    append_header(from_header, "<john@doe.com>");
    append_header("To", green);

    object status string = "X-VSMTP-STATUS";
    object status_delivered string = "delivered";

    object tracing string = "X-VSMTP-TRACING";
    object default_sender fqdn = "example.com";

    prepend_header(status, status_delivered);
    prepend_header(tracing, "empty");
    prepend_header("X-VSMTP-SENDER", default_sender);

    if !has_header(header_name)
    || !has_header("X-Another-Header")
    || !has_header("From")
    || !has_header("To")
    || !has_header("X-VSMTP-STATUS")
    || !has_header("X-VSMTP-TRACING")
    || !has_header("X-VSMTP-SENDER")
    {
        return deny();
    }

    object new_value string = "blah blah blah";

    set_header(header_name, header_value);
    set_header(header_name, "new value!");
    set_header("X-Another-Header", "value of another");
    set_header("X-Yet-Another-Header", new_value);

    print(get_header(header_name));
    print(get_header("X-Yet-Another-Header"));
    print(get_header("X-VSMTP-STATUS"));

    if !has_header("X-New-Header")
    || !has_header("X-Another-Header")
    || !has_header("X-Yet-Another-Header")
    {
        return deny();
    }

    if get_header("X-New-Header") == "new value!"
    && get_header("X-Another-Header") == "value of another"
    && get_header("From") == "<john@doe.com>"
    && get_header("To") == "green@foo.net"
    && get_header("X-Yet-Another-Header") == "blah blah blah"
    && get_header("X-VSMTP-STATUS") == "delivered"
    && get_header("X-VSMTP-TRACING") == "empty"
    && get_header("X-VSMTP-SENDER") == "example.com"
    {
        next()
    } else {
        deny()
    }
}

#{
    connect: [
        rule "adding headers when body is empty" || mutate_headers(),
        rule "trailing connect" || accept(),
    ],

    preq: [
        rule "adding headers to raw email" || mutate_headers(),
        rule "trailing preq" || accept(),
    ],

    postq: [
        rule "adding headers to parsed email" || mutate_headers(),
        rule "trailing postq" || accept(),
    ],
}
