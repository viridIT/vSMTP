/*
 * vSMTP mail transfer agent
 * Copyright (C) 2022 viridIT SAS
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see https://www.gnu.org/licenses/.
 *
*/
import "../error_handling/errors" as err;

#{
    connect: [
        rule "short rule" || vsl::next(),
        action "short action" || {},

        rule "extended rule format" #{
            evaluate: || {
                vsl::next()
            },
            description: "an extended rule",
            color: "#ffffff",
        },

        action "extended action format" #{
            evaluate: || vsl::next(),
            description: "an extended rule",
            color: "#ffffff",
        },

        rule "trailing" || vsl::accept(),
    ],

    helo: [
        rule "invalid rule" || {
            import "bad_rule";
        },

        // should not be reached.
        rule "trailing" || vsl::deny(),
    ],

    mail: [
        rule "rule missing evaluate" || {
            import "rule_missing_evaluate";
        },

        // should not be reached.
        rule "trailing" || vsl::deny(),
    ],

    rcpt: [
        rule "invalid action" || import "bad_action",

        // should not be reached.
        rule "trailing" || vsl::deny(),
    ],

    preq: [
        rule "action missing evaluate" || {
            import "action_missing_evaluate";
        },

        // should not be reached.
        rule "trailing" || vsl::deny(),
    ],

    postq: [
        rule "invalid object" || {
            import "bad_object";
        },

        // should not be reached.
        rule "trailing" || vsl::deny(),
    ],
}
