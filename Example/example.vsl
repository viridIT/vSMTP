// Objects
obj ip4 "MDA_IP" "192.168.0.1";
obj fqdn "Local_DN" "foobar.com";

obj rg4 "NET_10" "10.0.0.0/8";

// Private networks
obj grp "Private_NET" [
    NET_10,
    obj rg4 "192_NET" "192.168.0.0/16",
    obj rg4 "172_NET" "172.16.0.0/12",
];

obj val "SEC_LOG" "/var/log/mail/sec_log"; 

// Connection blacklist
obj file:addr "Con_BlckLst" "/var/tmp/vmta/con_blacklist";

// User syntax is always first.last@fqdn
obj regex "User_Syntax" "^[a-z]+[.][a-z0-9]+";

// MDA -> MTA : Force Accept
// MDA did all security checks for outgoing mails
rule connect "From_MDA" #{ 
    condition: || vsl.IS_CONNECT("MDA_IP"),
    on_success: vsl.FACCEPT,
    on_failure: vsl.DENY,
}; 

// Other internal -> MTA : Deny
// Endusers can't directly connect to the MTA
// A litlle bit paranoid as a firewall rule should already block the trafic
rule connect "From_Private" #{ 
    condition: || vsl.IS_CONNECT("Private_NET"),
    on_success: || { 
        vsl.LOG(`${date}:${time} : Connection attempt from internal IP : ${source_ip}`, SEC_LOG); 
        vsl.DENY()
    },
    on_failure: vsl.CONTINUE,
}; 

rule connect "Con_Blacklist" #{
    condition: || vsl.IS_CONNECT("Con_BlckLst"),
    on_success: vsl.DENY,
    // Shortcut - we allow everything else
    on_failure: vsl.CONTINUE,
};

let LOG_SENTENCE = `${date}:${time} : Relay attempt from : ${source_ip}`;

rule mail "Mail_Antirelay" #{
    condition: || vsl.IS_MAIL("Local_DN") && !vsl.IS_CONNECT("MDA_IP"),
    on_success: { 
        vsl.LOG(LOG_SENTENCE, SEC_LOG); 
        vsl.DENY()
    },
    on_failure: vsl.CONTINUE,
};

// Statistic on mail from
rule mail "mail_stat" #{
    condition: || true,
    on_success: || { vsl.DUMP(`/var/spool/mta/${msg_id})`) ; vsl.CONTINUE() },
};


// Anti-relaying
// 
rule rcpt "Rcpt_Antirelay" #{
    condition: || !vsl.IS_RCPT("Local_DN") && !vsl.IS_CONNECT("MDA_IP"),
    on_success: { 
        vsl.LOG(`${date}:${time} : Relay attempt from : ${source_ip}`, SEC_LOG); 
        vsl.DENY()
    },
    on_failure: vsl.CONTINUE,
};


rule rcpt "Rcpt_user_syntax" #{
    condition: || vsl.IS_RCPT("User_Syntax") || vsl.IS_RCPT("contact@viridit.com"),
    on_success: vsl.CONTINUE,
    on_failure: {
        vsl.LOG(`${date}:${time} : Unknown user ${rcpt}`, SEC_LOG);
        vsl.REMOVE_RCPT(rcpt);
        vsl.SMTP_CODE(${SMTP_CODE_USER_UNKNOWN});
        vsl.CONTINUE,
    },
};


/////////////////////////// Rule pour le delivery ?
rule deliver "local_user" #{
    condition: vsl.IS_RCPT("local_DN")
    on_sucess: vsl.MAILDIR(),   // on ne check pas les users locaux... c pas terrible
    on_failure: vsl.FORWARD(),
}
