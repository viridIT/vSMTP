object address_obj address = "add@obj.net";
object fqdn_obj fqdn = "obj.net";
object regex_obj regex = "^[a-z0-9.]+@obj.com$";
object file_obj file:address = "./src/tests/types/address/whitelist.txt";

object group_obj group = [
    address_obj,
    regex_obj,
    object nested_address address = "nested@address.com",
];

object identifier_obj ident = "local_part";
object string_obj string = "raw@address.net";

#{
    connect: [
        rule "test_new_address" || {
            let my_address = sys::new_address("my@address.fqdn");

            try {
                sys::new_address("bad.address");
                return sys::deny()
            } catch {
                return sys::next()
            }
        },

        rule "test_address" || {
            let my_address = sys::new_address("my@address.fqdn");

            print(my_address.to_string());
            print(my_address.to_debug());

            // check against a string & display.

            if my_address.to_string() is "my@address.fqdn"
            && my_address.to_debug() is "Address { at_sign: 2, full: \"my@address.fqdn\" }"
            && my_address is "my@address.fqdn"
            && my_address.local_part is "my"
            && my_address.domain is "address.fqdn"

            // check against another address.

            && ctx.mail_from is "mail.from@test.net"
            && ctx.mail_from not "not an email"
            && my_address.domain not ctx.mail_from
            && my_address.domain != ctx.mail_from
            && my_address.domain is "address.fqdn"
            && my_address.domain == "address.fqdn"

            // check against objects.

            && sys::new_address("my@address.fqdn") not address_obj
            && address_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.net") is address_obj
            && address_obj is sys::new_address("add@obj.net")

            && sys::new_address("my@address.fqdn") not fqdn_obj
            && fqdn_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.net") is fqdn_obj
            && fqdn_obj is sys::new_address("add@obj.net")

            && sys::new_address("my@address.fqdn") not regex_obj
            && regex_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.com") is regex_obj
            && regex_obj is sys::new_address("add@obj.com")

            && !(sys::new_address("my@address.fqdn") in file_obj)
            && sys::new_address("nested@address.com") in file_obj

            && !(sys::new_address("my@address.fqdn") in group_obj)
            && sys::new_address("nested@address.com") in group_obj

            && sys::new_address("my@address.fqdn") not identifier_obj
            && identifier_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("local_part@address.fqdn") is identifier_obj
            && identifier_obj is sys::new_address("local_part@address.fqdn")

            && sys::new_address("my@address.fqdn") not string_obj
            && string_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("raw@address.net") is string_obj
            && string_obj not sys::new_address("raw@address.net")

            {
                sys::next()
            } else {
                sys::deny()
            }
        },

        rule "test_not_valid_comparison" || {
            try {
                sys::new_address("raw@address.net") is object ip ip4 = "127.0.0.1";
                return sys::deny();
            } catch {}

            try {
                sys::new_address("raw@address.net") in object in_addr address = "impossible@test.com";
                return sys::deny();
            } catch {}

            sys::next()
        },

        rule "trailing" || sys::accept(),
    ]
}
