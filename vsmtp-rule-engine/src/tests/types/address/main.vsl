import "objects" as obj;

#{
    connect: [
        rule "test_new_address" || {
            let my_address = sys::new_address("my@address.fqdn");

            try {
                sys::new_address("bad.address");
                return deny()
            } catch {
                return next()
            }
        },

        rule "test_address" || {
            let my_address = sys::new_address("my@address.fqdn");

            print(my_address.to_string());
            print(my_address.to_debug());

            // check against a string & display.

            if my_address.to_string() is "my@address.fqdn"
            && my_address.to_debug() is "Address { at_sign: 2, full: \"my@address.fqdn\" }"
            && my_address is "my@address.fqdn"
            && my_address.local_part is "my"
            && my_address.domain is "address.fqdn"

            // check against another address.

            && ctx().mail_from is "mail.from@test.net"
            && ctx().mail_from not "not an email"
            && my_address.domain not ctx().mail_from
            && my_address.domain != ctx().mail_from
            && my_address.domain is "address.fqdn"
            && my_address.domain == "address.fqdn"

            // check against objects.

            && sys::new_address("my@address.fqdn") not obj::address_obj
            && obj::address_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.net") is obj::address_obj
            && obj::address_obj is sys::new_address("add@obj.net")

            && sys::new_address("my@address.fqdn") not obj::fqdn_obj
            && obj::fqdn_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.net") is obj::fqdn_obj
            && obj::fqdn_obj is sys::new_address("add@obj.net")

            && sys::new_address("my@address.fqdn") not obj::regex_obj
            && obj::regex_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("add@obj.com") is obj::regex_obj
            && obj::regex_obj is sys::new_address("add@obj.com")

            && !(sys::new_address("my@address.fqdn") in obj::file_obj)
            && sys::new_address("nested@address.com") in obj::file_obj

            && !(sys::new_address("my@address.fqdn") in obj::group_obj)
            && sys::new_address("nested@address.com") in obj::group_obj

            && sys::new_address("my@address.fqdn") not obj::identifier_obj
            && obj::identifier_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("local_part@address.fqdn") is obj::identifier_obj
            && obj::identifier_obj is sys::new_address("local_part@address.fqdn")

            && sys::new_address("my@address.fqdn") not obj::string_obj
            && obj::string_obj not sys::new_address("my@address.fqdn")
            && sys::new_address("raw@address.net") is obj::string_obj
            && obj::string_obj not sys::new_address("raw@address.net")

            {
                next()
            } else {
                deny()
            }
        },

        rule "test_not_valid_comparison" || {
            try {
                sys::new_address("raw@address.net") is object ip ip4 = "127.0.0.1";
                return deny();
            } catch {}

            try {
                sys::new_address("raw@address.net") in object in_addr address = "impossible@test.com";
                return deny();
            } catch {}

            next()
        },

        rule "trailing" || accept(),
    ]
}
